{{- $Password := default (randAlphaNum 32) .Values.global.postgresql.auth.password  | b64enc | quote }}
{{- if not .Values.global.postgresql.auth.password  }}
{{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace "mealie-postgres-secret") }}
{{- if $existingSecret }}
{{- $Password = index $existingSecret.data "password"}}
{{- end -}}
{{- end -}}

{{- $postgresPassword := default (randAlphaNum 32) .Values.global.postgresql.auth.postgresPassword  | b64enc | quote }}
{{- if not .Values.global.postgresql.auth.postgresPassword  }}
{{- $existingPostgresPasswordSecret := (lookup "v1" "Secret" .Release.Namespace "mealie-postgres-secret") }}
{{- if $existingPostgresPasswordSecret }}
{{- $postgresPassword = index $existingPostgresPasswordSecret.data "postgresPassword"}}
{{- end -}}
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: mealie-postgres-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  postgresPassword: {{ $postgresPassword }}
  password: {{ $Password }}